rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() {
      return request.auth != null;
    }

    function isUser(uid) {
      return signedIn() && request.auth.uid == uid;
    }

    match /users/{userId} {
      allow read: if signedIn();
      allow write: if isUser(userId);
      match /gameInvites/{inviteId} {
        allow read, write: if isUser(userId);
      }
      match /notifications/{noteId} {
        allow read, write: if isUser(userId);
      }
    }

    match /matchRequests/{requestId} {
      allow read, write: if signedIn() &&
        (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to ||
         request.auth.uid == request.resource.data.from || request.auth.uid == request.resource.data.to);
    }

    match /gameInvites/{inviteId} {
      allow read, write: if signedIn() &&
        (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to ||
         request.auth.uid == request.resource.data.from || request.auth.uid == request.resource.data.to);
    }

    match /gameSessions/{sessionId} {
      allow read, write: if signedIn() &&
        (request.auth.uid in resource.data.players || request.auth.uid in request.resource.data.players);
    }

    match /chats/{chatId} {
      allow read, write: if signedIn() &&
        request.auth.uid in resource.data.participants;
    }

    match /matches/{matchId} {
      allow read, write: if signedIn() &&
        (request.auth.uid in resource.data.users ||
         request.auth.uid in request.resource.data.users);
      match /messages/{messageId} {
        allow read, write: if signedIn() &&
          request.auth.uid in get(/databases/$(database)/documents/matches/$(matchId)).data.users;
      }
    }

    match /events/{eventId} {
      allow read, write: if signedIn();
    }

    // Community Board posts accessible to all signed-in users
    match /communityPosts/{postId} {
      allow read: if true;
      allow write: if signedIn();
    }
  }
}
